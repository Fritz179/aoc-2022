{
  "compilerOptions": {
    "esModuleInterop": true,

    // Strict Checks
    "alwaysStrict": true, // Ensures that your files are parsed in the ECMAScript strict mode, and emit “use strict” for each source file.
    "allowUnreachableCode": false, // pick up dead code paths
    "noImplicitAny": true, // In some cases where no type annotations are present, TypeScript will fall back to a type of any for a variable when it cannot infer the type.
    "strictNullChecks": true, // When strictNullChecks is true, null and undefined have their own distinct types and you’ll get a type error if you try to use them where a concrete value is expected.

    // Linter Checks
    "noImplicitReturns": true,
    "noUncheckedIndexedAccess": true, // accessing index must always check for undefined

    "strictFunctionTypes": true,
    "strict": true,


    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "noImplicitThis": true,
    
    "useUnknownInCatchVariables": true,
  },
  "ts-node": {
    "esm": true
  },
}